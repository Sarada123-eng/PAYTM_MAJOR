generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String?  @unique
  name        String? 
  number      String  @unique
  password    String

  Balance Balance[]
  P2PTransavtionSent P2PTransavtion[] @relation("SenderTransactions")
  P2PTransavtionReceived P2PTransavtion[] @relation("ReceiverTransactions")
  OnRampTransaction OnRampTransaction[]
}

model Merchant {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  auth_type   AuthType   
}

model Balance {
  id     Int   @id @default(autoincrement())
  amount Int   @default(0)
  userId Int   @unique
  locked Int
  user   User  @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id          Int      @id @default(autoincrement())
  userId      Int
  amount      Int
  token      String   @unique
  provider    String
  status      OnRampStatus 
  startTime   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model P2PTransavtion {
  id          Int      @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  amount      Int
  startTime   DateTime @default(now())

  sender      User     @relation("SenderTransactions", fields: [senderId], references: [id])
  receiver    User     @relation("ReceiverTransactions", fields: [receiverId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Pending
  Success
  Failed
}